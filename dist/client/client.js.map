{"version":3,"file":"client.js","sources":["../../src/client/dude.ts","../../src/client/blendIn.ts","../../src/client/input.ts","../../src/client/client.ts"],"sourcesContent":["import {\r\n  BufferAttribute,\r\n  InstancedBufferAttribute,\r\n  InstancedBufferGeometry,\r\n  Mesh,\r\n  PlaneBufferGeometry,\r\n  PlaneGeometry,\r\n  Vector2,\r\n  Vector3\r\n} from \"three\";\r\nimport * as THREE from \"three\";\r\n\r\nconst loader = new THREE.FileLoader();\r\n\r\nlet fragSrc: string;\r\nlet vertSrc: string;\r\n\r\nloader.load(\"./shaders/dude.frag\", (d) => fragSrc = d);\r\nloader.load(\"./shaders/dude.vert\", (d) => vertSrc = d);\r\n\r\nexport class Dude {\r\n  private positions: Vector2[];\r\n  private colors: number[];\r\n\r\n  private geometry: InstancedBufferGeometry;\r\n\r\n  private positionAttribute: BufferAttribute;\r\n  private colorAttribute: BufferAttribute;\r\n\r\n  private mesh: Mesh;\r\n\r\n  private scratchVector: Vector2 = new THREE.Vector2(0, 0);\r\n\r\n  constructor(count: number) {\r\n    const postionAtrbs = [];\r\n    this.positions = [];\r\n    this.colors = [];\r\n\r\n    const base = new THREE.PlaneBufferGeometry(1, 1, 1, 1);\r\n\r\n    this.geometry = new THREE.InstancedBufferGeometry();\r\n\r\n    this.geometry.index = base.index;\r\n    this.geometry.addAttribute(\"position\", base.getAttribute(\"position\"));\r\n    this.geometry.addAttribute(\"uv\", base.getAttribute(\"uv\"));\r\n\r\n    for (let i = 0; i < count; i++) {\r\n      postionAtrbs.push(0, 0);\r\n      this.positions.push(new THREE.Vector2(0, 0));\r\n      this.colors.push(Math.random(), Math.random(), Math.random());\r\n    }\r\n\r\n    this.positionAttribute = new THREE.InstancedBufferAttribute(new Float32Array(postionAtrbs), 2).setDynamic(true);\r\n    this.colorAttribute = new THREE.InstancedBufferAttribute(new Float32Array(this.colors), 3);\r\n\r\n    this.geometry.addAttribute(\"offset\", this.positionAttribute);\r\n    this.geometry.addAttribute(\"color\", this.colorAttribute);\r\n\r\n    const material = new THREE.RawShaderMaterial({\r\n      vertexShader: vertSrc,\r\n      fragmentShader: fragSrc\r\n    });\r\n\r\n    this.mesh = new THREE.Mesh(this.geometry, material);\r\n  }\r\n\r\n  public getMesh() {\r\n    return this.mesh;\r\n  }\r\n\r\n  public updatePosition(i: number, x: number, y: number) {\r\n    this.positions[i].set(x, y);\r\n    this.positionAttribute.setXY(i, x, y);\r\n    this.positionAttribute.needsUpdate = true;\r\n  }\r\n\r\n  public addPosition(i: number, x: number, y: number) {\r\n    this.scratchVector.set(x, y);\r\n\r\n    this.positions[i].add(this.scratchVector);\r\n    this.positionAttribute.setXY(i, this.positions[i].x, this.positions[i].y);\r\n    this.positionAttribute.needsUpdate = true;\r\n  }\r\n}\r\n","import * as KeyCodes from \"keycode-js\";\r\nimport { Camera, Mesh, Scene, Vector2 } from \"three\";\r\nimport * as THREE from \"three\";\r\nimport { Dude } from \"./dude\";\r\nimport { Input } from \"./input\";\r\n\r\nexport class BlendIn {\r\n  private dir: Vector2;\r\n  private speed: number;\r\n  private pTime: number | undefined;\r\n  private delta: number;\r\n\r\n  private duder: Dude;\r\n\r\n  constructor(private scene: Scene, private camera: Camera, private input: Input) {\r\n    this.dir = new THREE.Vector2(0, 0);\r\n    this.speed = 2;\r\n    this.delta = 0;\r\n\r\n    this.duder = new Dude(100);\r\n    for (let i = 0; i < 100; i++) {\r\n      this.duder.updatePosition(i, (i % 10) * 1.2, Math.floor(i / 10) * 1.2);\r\n    }\r\n\r\n    scene.add(this.duder.getMesh());\r\n  }\r\n\r\n  public handleInput() {\r\n    this.dir.set(0, 0);\r\n    if (this.input.pressed[KeyCodes.KEY_W]) {\r\n      this.dir.y = 1;\r\n    }\r\n    if (this.input.pressed[KeyCodes.KEY_S]) {\r\n      this.dir.y = -1;\r\n    }\r\n    if (this.input.pressed[KeyCodes.KEY_A]) {\r\n      this.dir.x = -1;\r\n    }\r\n    if (this.input.pressed[KeyCodes.KEY_D]) {\r\n      this.dir.x = 1;\r\n    }\r\n\r\n    if (this.dir.x !== 0 || this.dir.y !== 0) {\r\n      this.dir.normalize();\r\n    }\r\n  }\r\n\r\n  public move() {\r\n    this.duder.addPosition(4, this.dir.x * this.speed * this.delta, this.dir.y * this.speed * this.delta);\r\n  }\r\n\r\n  public update(time: number) {\r\n    if (!this.pTime) {\r\n      this.pTime = time;\r\n      return;\r\n    }\r\n    this.delta = (time - this.pTime) / 1000;\r\n\r\n    this.handleInput();\r\n    this.move();\r\n    for (let i = 0; i < 100; i++) {\r\n      this.duder.addPosition(i, Math.cos(time / 1000 + i) * 0.01, Math.sin(time / 1000 + i) * 0.01);\r\n    }\r\n    this.pTime = time;\r\n  }\r\n}\r\n","export class Input {\r\n    public pressed: { [code: number]: boolean | undefined } = {};\r\n\r\n    constructor() {\r\n        this.onKeyDown = (e: KeyboardEvent) => {\r\n            if (!this.pressed[e.keyCode]) {\r\n                this.keyHandler(e.keyCode);\r\n            }\r\n            this.pressed[e.keyCode] = true;\r\n        };\r\n        this.onKeyUp = (e: KeyboardEvent) => {\r\n            this.pressed[e.keyCode] = false;\r\n        };\r\n        this.contextMenu = (e: PointerEvent) => {\r\n            e.preventDefault();\r\n        };\r\n        this.dispose = () => {\r\n            document.removeEventListener(\"contextmenu\", this.contextMenu);\r\n            window.removeEventListener(\"keydown\", this.onKeyDown);\r\n            window.removeEventListener(\"keyup\", this.onKeyUp);\r\n        };\r\n\r\n        document.addEventListener(\"contextmenu\", this.contextMenu, false);\r\n        window.addEventListener(\"keydown\", this.onKeyDown, false);\r\n        window.addEventListener(\"keyup\", this.onKeyUp, false);\r\n    }\r\n\r\n    public dispose: () => void;\r\n\r\n    public onKeyDown(e: KeyboardEvent) {\r\n        if (!this.pressed[e.keyCode]) {\r\n            this.keyHandler(e.keyCode);\r\n        }\r\n        this.pressed[e.keyCode] = true;\r\n    }\r\n\r\n    public onKeyUp: (e: KeyboardEvent) => void;\r\n\r\n    public contextMenu: (e: PointerEvent) => void;\r\n\r\n    public keyHandler(key: number) {\r\n        //\r\n    }\r\n}\r\n","import * as THREE from \"three\";\r\nimport { OrthographicCamera, Scene, WebGLRenderer } from \"three\";\r\nimport { BlendIn } from \"./blendIn\";\r\nimport { Input } from \"./input\";\r\n\r\nwindow.onload = function () {\r\n  let container: HTMLElement | null;\r\n  let camera: OrthographicCamera;\r\n  let scene: Scene;\r\n  let renderer: WebGLRenderer;\r\n  let input: Input;\r\n\r\n  let game: BlendIn;\r\n\r\n  const frustumSize = 15;\r\n  const SCREEN_WIDTH = window.innerWidth;\r\n  const SCREEN_HEIGHT = window.innerHeight;\r\n\r\n  init();\r\n  animate();\r\n\r\n  function init() {\r\n    container = document.getElementById(\"container\");\r\n    if (container === null) {\r\n      throw new Error(\"Failed to find container\");\r\n    }\r\n\r\n    const aspect = window.innerWidth / window.innerHeight;\r\n    camera = new THREE.OrthographicCamera(\r\n      frustumSize * aspect / - 2, frustumSize * aspect / 2, frustumSize / 2, frustumSize / - 2, 1, 2000);\r\n    camera.position.set(3, 2.5, 15);\r\n\r\n    scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0, 0, 0);\r\n\r\n    renderer = new THREE.WebGLRenderer();\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n    container.appendChild(renderer.domElement);\r\n\r\n    input = new Input();\r\n\r\n    onWindowResize();\r\n    window.addEventListener(\"resize\", onWindowResize, false);\r\n\r\n    game = new BlendIn(scene, camera, input);\r\n\r\n  }\r\n\r\n  function onWindowResize() {\r\n    const aspect = window.innerWidth / window.innerHeight;\r\n\r\n    camera.left = - frustumSize * aspect / 2;\r\n    camera.right = frustumSize * aspect / 2;\r\n    camera.top = frustumSize / 2;\r\n    camera.bottom = - frustumSize / 2;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n  }\r\n\r\n  function animate(timestamp?: number) {\r\n    requestAnimationFrame(animate);\r\n    if (timestamp && !isNaN(timestamp)) {\r\n      game.update(timestamp);\r\n    }\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n};\r\n"],"names":["THREE.FileLoader","THREE.Vector2","THREE.PlaneBufferGeometry","THREE.InstancedBufferGeometry","THREE.InstancedBufferAttribute","THREE.RawShaderMaterial","THREE.Mesh","KeyCodes.KEY_W","KeyCodes.KEY_S","KeyCodes.KEY_A","KeyCodes.KEY_D","THREE.OrthographicCamera","THREE.Scene","THREE.Color","THREE.WebGLRenderer"],"mappings":"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"}